{"ast":null,"code":"import { REGISTER_USER_FAILURE, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS } from \"./userActionTypes\";\nlet initialState = {\n  loading: false,\n  isAuthenticated: false,\n  token: null,\n  user: {}\n};\n\nlet userReducer = (state = initialState, action) => {\n  let {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case REGISTER_USER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case REGISTER_USER_SUCCESS:\n      localStorage;\n      return { ...state,\n        loading: false,\n        isAuthenticated: true,\n        token: payload.token\n      };\n\n    case REGISTER_USER_FAILURE:\n      return { ...state,\n        loading: false,\n        isAuthenticated: false\n      };\n  }\n};\n\nexport { userReducer };","map":{"version":3,"sources":["/home/harish/Documents/brainscart App/client/src/redux/user/userReducer.js"],"names":["REGISTER_USER_FAILURE","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","initialState","loading","isAuthenticated","token","user","userReducer","state","action","type","payload","localStorage"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,qBAAhC,EAAuDC,qBAAvD,QAAoF,mBAApF;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAG,KADK;AAEfC,EAAAA,eAAe,EAAG,KAFH;AAGfC,EAAAA,KAAK,EAAG,IAHO;AAIfC,EAAAA,IAAI,EAAG;AAJQ,CAAnB;;AAMA,IAAIC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,MAAI;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBF,MAAtB;;AACA,UAAOC,IAAP;AACI,SAAKV,qBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHL,QAAAA,OAAO,EAAG;AAFP,OAAP;;AAIA,SAAKF,qBAAL;AACIW,MAAAA,YAAY;AACZ,aAAO,EACH,GAAGJ,KADA;AAEHL,QAAAA,OAAO,EAAG,KAFP;AAGHC,QAAAA,eAAe,EAAG,IAHf;AAIHC,QAAAA,KAAK,EAAGM,OAAO,CAACN;AAJb,OAAP;;AAMJ,SAAKN,qBAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,OAAO,EAAG,KAFP;AAGHC,QAAAA,eAAe,EAAG;AAHf,OAAP;AAfZ;AAqBH,CAvBD;;AA0BA,SAAQG,WAAR","sourcesContent":["import { REGISTER_USER_FAILURE, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS } from \"./userActionTypes\";\n\nlet initialState = {\n    loading : false,\n    isAuthenticated : false,\n    token : null,\n    user : {}\n};\nlet userReducer = (state = initialState, action) => {\n    let {type, payload} = action;\n    switch(type) {\n        case REGISTER_USER_REQUEST:\n            return {\n                ...state,\n                loading : true\n            };\n            case REGISTER_USER_SUCCESS:\n                localStorage\n                return {\n                    ...state,\n                    loading : false,\n                    isAuthenticated : true,\n                    token : payload.token\n                };\n            case REGISTER_USER_FAILURE:\n                return {\n                    ...state,\n                    loading : false,\n                    isAuthenticated : false\n                }\n    }\n};  \n\n\nexport {userReducer};"]},"metadata":{},"sourceType":"module"}