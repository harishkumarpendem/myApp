{"ast":null,"code":"import _classCallCheck from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harish/Downloads/reactjs-chat-demo/src/Component/Profile/Profile.js\";\nimport React, { Component } from 'react';\nimport ReactLoading from 'react-loading';\nimport { withRouter } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { myFirestore, myStorage } from '../../Config/MyFirebase';\nimport images from './../Themes/Images';\nimport './Profile.css';\nimport { AppString } from './../Const';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n\n    _this.checkLogin = function () {\n      if (!localStorage.getItem(AppString.ID)) {\n        _this.props.history.push('/');\n      }\n    };\n\n    _this.onChangeNickname = function (event) {\n      _this.setState({\n        nickname: event.target.value\n      });\n    };\n\n    _this.onChangeAboutMe = function (event) {\n      _this.setState({\n        aboutMe: event.target.value\n      });\n    };\n\n    _this.onChangeAvatar = function (event) {\n      if (event.target.files && event.target.files[0]) {\n        // Check this file is an image?\n        var prefixFiletype = event.target.files[0].type.toString();\n\n        if (prefixFiletype.indexOf(AppString.PREFIX_IMAGE) !== 0) {\n          _this.props.showToast(0, 'This file is not an image');\n\n          return;\n        }\n\n        _this.newAvatar = event.target.files[0];\n\n        _this.setState({\n          photoUrl: URL.createObjectURL(event.target.files[0])\n        });\n      } else {\n        _this.props.showToast(0, 'Something wrong with input file');\n      }\n    };\n\n    _this.uploadAvatar = function () {\n      _this.setState({\n        isLoading: true\n      });\n\n      if (_this.newAvatar) {\n        var uploadTask = myStorage.ref().child(_this.state.id).put(_this.newAvatar);\n        uploadTask.on(AppString.UPLOAD_CHANGED, null, function (err) {\n          _this.props.showToast(0, err.message);\n        }, function () {\n          uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n            _this.updateUserInfo(true, downloadURL);\n          });\n        });\n      } else {\n        _this.updateUserInfo(false, null);\n      }\n    };\n\n    _this.updateUserInfo = function (isUpdatePhotoUrl, downloadURL) {\n      var newInfo;\n\n      if (isUpdatePhotoUrl) {\n        newInfo = {\n          nickname: _this.state.nickname,\n          aboutMe: _this.state.aboutMe,\n          photoUrl: downloadURL\n        };\n      } else {\n        newInfo = {\n          nickname: _this.state.nickname,\n          aboutMe: _this.state.aboutMe\n        };\n      }\n\n      myFirestore.collection(AppString.NODE_USERS).doc(_this.state.id).update(newInfo).then(function (data) {\n        localStorage.setItem(AppString.NICKNAME, _this.state.nickname);\n        localStorage.setItem(AppString.ABOUT_ME, _this.state.aboutMe);\n\n        if (isUpdatePhotoUrl) {\n          localStorage.setItem(AppString.PHOTO_URL, downloadURL);\n        }\n\n        _this.setState({\n          isLoading: false\n        });\n\n        _this.props.showToast(1, 'Update info success');\n      });\n    };\n\n    _this.state = {\n      isLoading: false,\n      id: localStorage.getItem(AppString.ID),\n      nickname: localStorage.getItem(AppString.NICKNAME),\n      aboutMe: localStorage.getItem(AppString.ABOUT_ME),\n      photoUrl: localStorage.getItem(AppString.PHOTO_URL)\n    };\n    _this.newAvatar = null;\n    _this.newPhotoUrl = '';\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkLogin();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"PROFILE\")), React.createElement(\"img\", {\n        className: \"avatar\",\n        alt: \"Avatar\",\n        src: this.state.photoUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"viewWrapInputFile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"imgInputFile\",\n        alt: \"icon gallery\",\n        src: images.ic_input_file,\n        onClick: function onClick() {\n          return _this2.refInput.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        ref: function ref(el) {\n          _this2.refInput = el;\n        },\n        accept: \"image/*\",\n        className: \"viewInputFile\",\n        type: \"file\",\n        onChange: this.onChangeAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"textLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Nickname:\"), React.createElement(\"input\", {\n        className: \"textInput\",\n        value: this.state.nickname ? this.state.nickname : '',\n        placeholder: \"Your nickname...\",\n        onChange: this.onChangeNickname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"textLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"About me:\"), React.createElement(\"input\", {\n        className: \"textInput\",\n        value: this.state.aboutMe ? this.state.aboutMe : '',\n        placeholder: \"Tell about yourself...\",\n        onChange: this.onChangeAboutMe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btnUpdate\",\n        onClick: this.uploadAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"UPDATE\"), this.state.isLoading ? React.createElement(\"div\", {\n        className: \"viewLoading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ReactLoading, {\n        type: 'spin',\n        color: '#203152',\n        height: '3%',\n        width: '3%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })) : null);\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default withRouter(Profile);","map":{"version":3,"sources":["/home/harish/Downloads/reactjs-chat-demo/src/Component/Profile/Profile.js"],"names":["React","Component","ReactLoading","withRouter","myFirestore","myStorage","images","AppString","Profile","props","checkLogin","localStorage","getItem","ID","history","push","onChangeNickname","event","setState","nickname","target","value","onChangeAboutMe","aboutMe","onChangeAvatar","files","prefixFiletype","type","toString","indexOf","PREFIX_IMAGE","showToast","newAvatar","photoUrl","URL","createObjectURL","uploadAvatar","isLoading","uploadTask","ref","child","state","id","put","on","UPLOAD_CHANGED","err","message","snapshot","getDownloadURL","then","downloadURL","updateUserInfo","isUpdatePhotoUrl","newInfo","collection","NODE_USERS","doc","update","data","setItem","NICKNAME","ABOUT_ME","PHOTO_URL","newPhotoUrl","ic_input_file","refInput","click","el"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport ReactLoading from 'react-loading'\nimport {withRouter} from 'react-router-dom'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {myFirestore, myStorage} from '../../Config/MyFirebase'\nimport images from './../Themes/Images'\nimport './Profile.css'\nimport {AppString} from './../Const'\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: false,\n            id: localStorage.getItem(AppString.ID),\n            nickname: localStorage.getItem(AppString.NICKNAME),\n            aboutMe: localStorage.getItem(AppString.ABOUT_ME),\n            photoUrl: localStorage.getItem(AppString.PHOTO_URL)\n        }\n        this.newAvatar = null\n        this.newPhotoUrl = ''\n    }\n\n    componentDidMount() {\n        this.checkLogin()\n    }\n\n    checkLogin = () => {\n        if (!localStorage.getItem(AppString.ID)) {\n            this.props.history.push('/')\n        }\n    }\n\n    onChangeNickname = event => {\n        this.setState({nickname: event.target.value})\n    }\n\n    onChangeAboutMe = event => {\n        this.setState({aboutMe: event.target.value})\n    }\n\n    onChangeAvatar = event => {\n        if (event.target.files && event.target.files[0]) {\n            // Check this file is an image?\n            const prefixFiletype = event.target.files[0].type.toString()\n            if (prefixFiletype.indexOf(AppString.PREFIX_IMAGE) !== 0) {\n                this.props.showToast(0, 'This file is not an image')\n                return\n            }\n            this.newAvatar = event.target.files[0]\n            this.setState({photoUrl: URL.createObjectURL(event.target.files[0])})\n        } else {\n            this.props.showToast(0, 'Something wrong with input file')\n        }\n    }\n\n    uploadAvatar = () => {\n        this.setState({isLoading: true})\n        if (this.newAvatar) {\n            const uploadTask = myStorage\n                .ref()\n                .child(this.state.id)\n                .put(this.newAvatar)\n            uploadTask.on(\n                AppString.UPLOAD_CHANGED,\n                null,\n                err => {\n                    this.props.showToast(0, err.message)\n                },\n                () => {\n                    uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                        this.updateUserInfo(true, downloadURL)\n                    })\n                }\n            )\n        } else {\n            this.updateUserInfo(false, null)\n        }\n    }\n\n    updateUserInfo = (isUpdatePhotoUrl, downloadURL) => {\n        let newInfo\n        if (isUpdatePhotoUrl) {\n            newInfo = {\n                nickname: this.state.nickname,\n                aboutMe: this.state.aboutMe,\n                photoUrl: downloadURL\n            }\n        } else {\n            newInfo = {\n                nickname: this.state.nickname,\n                aboutMe: this.state.aboutMe\n            }\n        }\n        myFirestore\n            .collection(AppString.NODE_USERS)\n            .doc(this.state.id)\n            .update(newInfo)\n            .then(data => {\n                localStorage.setItem(AppString.NICKNAME, this.state.nickname)\n                localStorage.setItem(AppString.ABOUT_ME, this.state.aboutMe)\n                if (isUpdatePhotoUrl) {\n                    localStorage.setItem(AppString.PHOTO_URL, downloadURL)\n                }\n                this.setState({isLoading: false})\n                this.props.showToast(1, 'Update info success')\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"root\">\n                <div className=\"header\">\n                    <span>PROFILE</span>\n                </div>\n\n                <img className=\"avatar\" alt=\"Avatar\" src={this.state.photoUrl}/>\n\n                <div className=\"viewWrapInputFile\">\n                    <img\n                        className=\"imgInputFile\"\n                        alt=\"icon gallery\"\n                        src={images.ic_input_file}\n                        onClick={() => this.refInput.click()}\n                    />\n                    <input\n                        ref={el => {\n                            this.refInput = el\n                        }}\n                        accept=\"image/*\"\n                        className=\"viewInputFile\"\n                        type=\"file\"\n                        onChange={this.onChangeAvatar}\n                    />\n                </div>\n\n                <span className=\"textLabel\">Nickname:</span>\n                <input\n                    className=\"textInput\"\n                    value={this.state.nickname ? this.state.nickname : ''}\n                    placeholder=\"Your nickname...\"\n                    onChange={this.onChangeNickname}\n                />\n                <span className=\"textLabel\">About me:</span>\n                <input\n                    className=\"textInput\"\n                    value={this.state.aboutMe ? this.state.aboutMe : ''}\n                    placeholder=\"Tell about yourself...\"\n                    onChange={this.onChangeAboutMe}\n                />\n\n                <button className=\"btnUpdate\" onClick={this.uploadAvatar}>\n                    UPDATE\n                </button>\n\n                {this.state.isLoading ? (\n                    <div className=\"viewLoading\">\n                        <ReactLoading\n                            type={'spin'}\n                            color={'#203152'}\n                            height={'3%'}\n                            width={'3%'}\n                        />\n                    </div>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Profile)\n"]},"metadata":{},"sourceType":"module"}