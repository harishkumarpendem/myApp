{"ast":null,"code":"import _regeneratorRuntime from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harish/Downloads/reactjs-chat-demo/src/Component/Login/Login.js\";\nimport firebase from 'firebase';\nimport React, { Component } from 'react';\nimport ReactLoading from 'react-loading';\nimport { withRouter } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { myFirebase, myFirestore } from '../../Config/MyFirebase';\nimport './Login.css';\nimport { AppString } from './../Const';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.checkLogin = function () {\n      if (localStorage.getItem(AppString.ID)) {\n        _this.setState({\n          isLoading: false\n        }, function () {\n          _this.setState({\n            isLoading: false\n          });\n\n          _this.props.showToast(1, 'Login success');\n\n          _this.props.history.push('/main');\n        });\n      } else {\n        _this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    _this.onLoginPress = function () {\n      _this.setState({\n        isLoading: true\n      });\n\n      myFirebase.auth().signInWithPopup(_this.provider).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(result) {\n          var user, _result;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  user = result.user;\n\n                  if (!user) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return myFirestore.collection(AppString.NODE_USERS).where(AppString.ID, '==', user.uid).get();\n\n                case 4:\n                  _result = _context.sent;\n\n                  if (_result.docs.length === 0) {\n                    // Set new data since this is a new user\n                    myFirestore.collection('users').doc(user.uid).set({\n                      id: user.uid,\n                      nickname: user.displayName,\n                      aboutMe: '',\n                      photoUrl: user.photoURL\n                    }).then(function (data) {\n                      // Write user info to local\n                      localStorage.setItem(AppString.ID, user.uid);\n                      localStorage.setItem(AppString.NICKNAME, user.displayName);\n                      localStorage.setItem(AppString.PHOTO_URL, user.photoURL);\n\n                      _this.setState({\n                        isLoading: false\n                      }, function () {\n                        _this.props.showToast(1, 'Login success');\n\n                        _this.props.history.push('/main');\n                      });\n                    });\n                  } else {\n                    // Write user info to local\n                    localStorage.setItem(AppString.ID, _result.docs[0].data().id);\n                    localStorage.setItem(AppString.NICKNAME, _result.docs[0].data().nickname);\n                    localStorage.setItem(AppString.PHOTO_URL, _result.docs[0].data().photoUrl);\n                    localStorage.setItem(AppString.ABOUT_ME, _result.docs[0].data().aboutMe);\n\n                    _this.setState({\n                      isLoading: false\n                    }, function () {\n                      _this.props.showToast(1, 'Login success');\n\n                      _this.props.history.push('/main');\n                    });\n                  }\n\n                  _context.next = 9;\n                  break;\n\n                case 8:\n                  _this.props.showToast(0, 'User info not available');\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (err) {\n        _this.props.showToast(0, err.message);\n\n        _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.provider = new firebase.auth.GoogleAuthProvider();\n    _this.state = {\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkLogin();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"viewRoot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"CHAT DEMO\"), React.createElement(\"button\", {\n        className: \"btnLogin\",\n        type: \"submit\",\n        onClick: this.onLoginPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"SIGN IN WITH GOOGLE\"), this.state.isLoading ? React.createElement(\"div\", {\n        className: \"viewLoading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(ReactLoading, {\n        type: 'spin',\n        color: '#203152',\n        height: '3%',\n        width: '3%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })) : null);\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/harish/Downloads/reactjs-chat-demo/src/Component/Login/Login.js"],"names":["firebase","React","Component","ReactLoading","withRouter","myFirebase","myFirestore","AppString","Login","props","checkLogin","localStorage","getItem","ID","setState","isLoading","showToast","history","push","onLoginPress","auth","signInWithPopup","provider","then","result","user","collection","NODE_USERS","where","uid","get","docs","length","doc","set","id","nickname","displayName","aboutMe","photoUrl","photoURL","data","setItem","NICKNAME","PHOTO_URL","ABOUT_ME","catch","err","message","GoogleAuthProvider","state"],"mappings":"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","sourcesContent":["import firebase from 'firebase'\nimport React, {Component} from 'react'\nimport ReactLoading from 'react-loading'\nimport {withRouter} from 'react-router-dom'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {myFirebase, myFirestore} from '../../Config/MyFirebase'\nimport './Login.css'\nimport {AppString} from './../Const'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.provider = new firebase.auth.GoogleAuthProvider()\n        this.state = {\n            isLoading: true\n        }\n    }\n\n    componentDidMount() {\n        this.checkLogin()\n    }\n\n    checkLogin = () => {\n        if (localStorage.getItem(AppString.ID)) {\n            this.setState({isLoading: false}, () => {\n                this.setState({isLoading: false})\n                this.props.showToast(1, 'Login success')\n                this.props.history.push('/main')\n            })\n        } else {\n            this.setState({isLoading: false})\n        }\n    }\n\n    onLoginPress = () => {\n        this.setState({isLoading: true})\n        myFirebase\n            .auth()\n            .signInWithPopup(this.provider)\n            .then(async result => {\n                let user = result.user\n                if (user) {\n                    const result = await myFirestore\n                        .collection(AppString.NODE_USERS)\n                        .where(AppString.ID, '==', user.uid)\n                        .get()\n\n                    if (result.docs.length === 0) {\n                        // Set new data since this is a new user\n                        myFirestore\n                            .collection('users')\n                            .doc(user.uid)\n                            .set({\n                                id: user.uid,\n                                nickname: user.displayName,\n                                aboutMe: '',\n                                photoUrl: user.photoURL\n                            })\n                            .then(data => {\n                                // Write user info to local\n                                localStorage.setItem(AppString.ID, user.uid)\n                                localStorage.setItem(AppString.NICKNAME, user.displayName)\n                                localStorage.setItem(AppString.PHOTO_URL, user.photoURL)\n                                this.setState({isLoading: false}, () => {\n                                    this.props.showToast(1, 'Login success')\n                                    this.props.history.push('/main')\n                                })\n                            })\n                    } else {\n                        // Write user info to local\n                        localStorage.setItem(AppString.ID, result.docs[0].data().id)\n                        localStorage.setItem(\n                            AppString.NICKNAME,\n                            result.docs[0].data().nickname\n                        )\n                        localStorage.setItem(\n                            AppString.PHOTO_URL,\n                            result.docs[0].data().photoUrl\n                        )\n                        localStorage.setItem(\n                            AppString.ABOUT_ME,\n                            result.docs[0].data().aboutMe\n                        )\n                        this.setState({isLoading: false}, () => {\n                            this.props.showToast(1, 'Login success')\n                            this.props.history.push('/main')\n                        })\n                    }\n                } else {\n                    this.props.showToast(0, 'User info not available')\n                }\n            })\n            .catch(err => {\n                this.props.showToast(0, err.message)\n                this.setState({isLoading: false})\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"viewRoot\">\n                <div className=\"header\">CHAT DEMO</div>\n                <button className=\"btnLogin\" type=\"submit\" onClick={this.onLoginPress}>\n                    SIGN IN WITH GOOGLE\n                </button>\n\n                {this.state.isLoading ? (\n                    <div className=\"viewLoading\">\n                        <ReactLoading\n                            type={'spin'}\n                            color={'#203152'}\n                            height={'3%'}\n                            width={'3%'}\n                        />\n                    </div>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Login)\n"]},"metadata":{},"sourceType":"module"}