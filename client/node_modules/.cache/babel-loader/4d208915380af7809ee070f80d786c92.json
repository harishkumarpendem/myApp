{"ast":null,"code":"import _classCallCheck from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harish/Downloads/reactjs-chat-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harish/Downloads/reactjs-chat-demo/src/Component/ChatBoard/ChatBoard.js\";\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport ReactLoading from 'react-loading';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { myFirestore, myStorage } from '../../Config/MyFirebase';\nimport images from '../Themes/Images';\nimport './ChatBoard.css';\nimport { AppString } from './../Const';\n\nvar ChatBoard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatBoard, _Component);\n\n  function ChatBoard(props) {\n    var _this;\n\n    _classCallCheck(this, ChatBoard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatBoard).call(this, props));\n\n    _this.getListHistory = function () {\n      if (_this.removeListener) {\n        _this.removeListener();\n      }\n\n      _this.listMessage.length = 0;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      if (_this.hashString(_this.currentUserId) <= _this.hashString(_this.currentPeerUser.id)) {\n        _this.groupChatId = \"\".concat(_this.currentUserId, \"-\").concat(_this.currentPeerUser.id);\n      } else {\n        _this.groupChatId = \"\".concat(_this.currentPeerUser.id, \"-\").concat(_this.currentUserId);\n      } // Get history and listen new data added\n\n\n      _this.removeListener = myFirestore.collection(AppString.NODE_MESSAGES).doc(_this.groupChatId).collection(_this.groupChatId).onSnapshot(function (snapshot) {\n        snapshot.docChanges().forEach(function (change) {\n          if (change.type === AppString.DOC_ADDED) {\n            _this.listMessage.push(change.doc.data());\n          }\n        });\n\n        _this.setState({\n          isLoading: false\n        });\n      }, function (err) {\n        _this.props.showToast(0, err.toString());\n      });\n    };\n\n    _this.openListSticker = function () {\n      _this.setState({\n        isShowSticker: !_this.state.isShowSticker\n      });\n    };\n\n    _this.onSendMessage = function (content, type) {\n      if (_this.state.isShowSticker && type === 2) {\n        _this.setState({\n          isShowSticker: false\n        });\n      }\n\n      if (content.trim() === '') {\n        return;\n      }\n\n      var timestamp = moment().valueOf().toString();\n      var itemMessage = {\n        idFrom: _this.currentUserId,\n        idTo: _this.currentPeerUser.id,\n        timestamp: timestamp,\n        content: content.trim(),\n        type: type\n      };\n      myFirestore.collection(AppString.NODE_MESSAGES).doc(_this.groupChatId).collection(_this.groupChatId).doc(timestamp).set(itemMessage).then(function () {\n        _this.setState({\n          inputValue: ''\n        });\n      }).catch(function (err) {\n        _this.props.showToast(0, err.toString());\n      });\n    };\n\n    _this.onChoosePhoto = function (event) {\n      if (event.target.files && event.target.files[0]) {\n        _this.setState({\n          isLoading: true\n        });\n\n        _this.currentPhotoFile = event.target.files[0]; // Check this file is an image?\n\n        var prefixFiletype = event.target.files[0].type.toString();\n\n        if (prefixFiletype.indexOf(AppString.PREFIX_IMAGE) === 0) {\n          _this.uploadPhoto();\n        } else {\n          _this.setState({\n            isLoading: false\n          });\n\n          _this.props.showToast(0, 'This file is not an image');\n        }\n      } else {\n        _this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    _this.uploadPhoto = function () {\n      if (_this.currentPhotoFile) {\n        var timestamp = moment().valueOf().toString();\n        var uploadTask = myStorage.ref().child(timestamp).put(_this.currentPhotoFile);\n        uploadTask.on(AppString.UPLOAD_CHANGED, null, function (err) {\n          _this.setState({\n            isLoading: false\n          });\n\n          _this.props.showToast(0, err.message);\n        }, function () {\n          uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n            _this.setState({\n              isLoading: false\n            });\n\n            _this.onSendMessage(downloadURL, 1);\n          });\n        });\n      } else {\n        _this.setState({\n          isLoading: false\n        });\n\n        _this.props.showToast(0, 'File is null');\n      }\n    };\n\n    _this.onKeyboardPress = function (event) {\n      if (event.key === 'Enter') {\n        _this.onSendMessage(_this.state.inputValue, 0);\n      }\n    };\n\n    _this.scrollToBottom = function () {\n      if (_this.messagesEnd) {\n        _this.messagesEnd.scrollIntoView({});\n      }\n    };\n\n    _this.renderListMessage = function () {\n      if (_this.listMessage.length > 0) {\n        var viewListMessage = [];\n\n        _this.listMessage.forEach(function (item, index) {\n          if (item.idFrom === _this.currentUserId) {\n            // Item right (my message)\n            if (item.type === 0) {\n              viewListMessage.push(React.createElement(\"div\", {\n                className: \"viewItemRight\",\n                key: item.timestamp,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 278\n                },\n                __self: this\n              }, React.createElement(\"span\", {\n                className: \"textContentItem\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 279\n                },\n                __self: this\n              }, item.content)));\n            } else if (item.type === 1) {\n              viewListMessage.push(React.createElement(\"div\", {\n                className: \"viewItemRight2\",\n                key: item.timestamp,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 284\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                className: \"imgItemRight\",\n                src: item.content,\n                alt: \"content message\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 285\n                },\n                __self: this\n              })));\n            } else {\n              viewListMessage.push(React.createElement(\"div\", {\n                className: \"viewItemRight3\",\n                key: item.timestamp,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 294\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                className: \"imgItemRight\",\n                src: _this.getGifImage(item.content),\n                alt: \"content message\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 295\n                },\n                __self: this\n              })));\n            }\n          } else {\n            // Item left (peer message)\n            if (item.type === 0) {\n              viewListMessage.push(React.createElement(\"div\", {\n                className: \"viewWrapItemLeft\",\n                key: item.timestamp,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 307\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"viewWrapItemLeft3\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 308\n                },\n                __self: this\n              }, _this.isLastMessageLeft(index) ? React.createElement(\"img\", {\n                src: _this.currentPeerUser.photoUrl,\n                alt: \"avatar\",\n                className: \"peerAvatarLeft\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 310\n                },\n                __self: this\n              }) : React.createElement(\"div\", {\n                className: \"viewPaddingLeft\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 316\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                className: \"viewItemLeft\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 318\n                },\n                __self: this\n              }, React.createElement(\"span\", {\n                className: \"textContentItem\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 319\n                },\n                __self: this\n              }, item.content))), _this.isLastMessageLeft(index) ? React.createElement(\"span\", {\n                className: \"textTimeLeft\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 323\n                },\n                __self: this\n              }, moment(Number(item.timestamp)).format('ll')) : null));\n            } else if (item.type === 1) {\n              viewListMessage.push(React.createElement(\"div\", {\n                className: \"viewWrapItemLeft2\",\n                key: item.timestamp,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 331\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"viewWrapItemLeft3\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 332\n                },\n                __self: this\n              }, _this.isLastMessageLeft(index) ? React.createElement(\"img\", {\n                src: _this.currentPeerUser.photoUrl,\n                alt: \"avatar\",\n                className: \"peerAvatarLeft\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 334\n                },\n                __self: this\n              }) : React.createElement(\"div\", {\n                className: \"viewPaddingLeft\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 340\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                className: \"viewItemLeft2\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 342\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                className: \"imgItemLeft\",\n                src: item.content,\n                alt: \"content message\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 343\n                },\n                __self: this\n              }))), _this.isLastMessageLeft(index) ? React.createElement(\"span\", {\n                className: \"textTimeLeft\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 351\n                },\n                __self: this\n              }, moment(Number(item.timestamp)).format('ll')) : null));\n            } else {\n              viewListMessage.push(React.createElement(\"div\", {\n                className: \"viewWrapItemLeft2\",\n                key: item.timestamp,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 359\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"viewWrapItemLeft3\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 360\n                },\n                __self: this\n              }, _this.isLastMessageLeft(index) ? React.createElement(\"img\", {\n                src: _this.currentPeerUser.photoUrl,\n                alt: \"avatar\",\n                className: \"peerAvatarLeft\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 362\n                },\n                __self: this\n              }) : React.createElement(\"div\", {\n                className: \"viewPaddingLeft\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 368\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                className: \"viewItemLeft3\",\n                key: item.timestamp,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 370\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                className: \"imgItemLeft\",\n                src: _this.getGifImage(item.content),\n                alt: \"content message\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 371\n                },\n                __self: this\n              }))), _this.isLastMessageLeft(index) ? React.createElement(\"span\", {\n                className: \"textTimeLeft\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 379\n                },\n                __self: this\n              }, moment(Number(item.timestamp)).format('ll')) : null));\n            }\n          }\n        });\n\n        return viewListMessage;\n      } else {\n        return React.createElement(\"div\", {\n          className: \"viewWrapSayHi\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"textSayHi\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, \"Say hi to new friend\"), React.createElement(\"img\", {\n          className: \"imgWaveHand\",\n          src: images.ic_wave_hand,\n          alt: \"wave hand\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393\n          },\n          __self: this\n        }));\n      }\n    };\n\n    _this.renderStickers = function () {\n      return React.createElement(\"div\", {\n        className: \"viewStickers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi1,\n        alt: \"sticker\",\n        onClick: function onClick() {\n          return _this.onSendMessage('mimi1', 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi2,\n        alt: \"sticker\",\n        onClick: function onClick() {\n          return _this.onSendMessage('mimi2', 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi3,\n        alt: \"sticker\",\n        onClick: function onClick() {\n          return _this.onSendMessage('mimi3', 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi4,\n        alt: \"sticker\",\n        onClick: function onClick() {\n          return _this.onSendMessage('mimi4', 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi5,\n        alt: \"sticker\",\n        onClick: function onClick() {\n          return _this.onSendMessage('mimi5', 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi6,\n        alt: \"sticker\",\n        onClick: function onClick() {\n          return _this.onSendMessage('mimi6', 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi7,\n        alt: \"sticker\",\n        onClick: function onClick() {\n          return _this.onSendMessage('mimi7', 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi8,\n        alt: \"sticker\",\n        onClick: function onClick() {\n          return _this.onSendMessage('mimi8', 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi9,\n        alt: \"sticker\",\n        onClick: function onClick() {\n          return _this.onSendMessage('mimi9', 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }));\n    };\n\n    _this.hashString = function (str) {\n      var hash = 0;\n\n      for (var i = 0; i < str.length; i++) {\n        hash += Math.pow(str.charCodeAt(i) * 31, str.length - i);\n        hash = hash & hash; // Convert to 32bit integer\n      }\n\n      return hash;\n    };\n\n    _this.getGifImage = function (value) {\n      switch (value) {\n        case 'mimi1':\n          return images.mimi1;\n\n        case 'mimi2':\n          return images.mimi2;\n\n        case 'mimi3':\n          return images.mimi3;\n\n        case 'mimi4':\n          return images.mimi4;\n\n        case 'mimi5':\n          return images.mimi5;\n\n        case 'mimi6':\n          return images.mimi6;\n\n        case 'mimi7':\n          return images.mimi7;\n\n        case 'mimi8':\n          return images.mimi8;\n\n        case 'mimi9':\n          return images.mimi9;\n\n        default:\n          return null;\n      }\n    };\n\n    _this.state = {\n      isLoading: false,\n      isShowSticker: false,\n      inputValue: ''\n    };\n    _this.currentUserId = localStorage.getItem(AppString.ID);\n    _this.currentUserAvatar = localStorage.getItem(AppString.PHOTO_URL);\n    _this.currentUserNickname = localStorage.getItem(AppString.NICKNAME);\n    _this.listMessage = [];\n    _this.currentPeerUser = _this.props.currentPeerUser;\n    _this.groupChatId = null;\n    _this.removeListener = null;\n    _this.currentPhotoFile = null;\n    return _this;\n  }\n\n  _createClass(ChatBoard, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // For first render, it's not go through componentWillReceiveProps\n      this.getListHistory();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.removeListener) {\n        this.removeListener();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.currentPeerUser) {\n        this.currentPeerUser = newProps.currentPeerUser;\n        this.getListHistory();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"viewChatBoard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"headerChatBoard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"viewAvatarItem\",\n        src: this.currentPeerUser.photoUrl,\n        alt: \"icon avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"textHeaderChatBoard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, this.currentPeerUser.nickname)), React.createElement(\"div\", {\n        className: \"viewListContentChat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.renderListMessage(), React.createElement(\"div\", {\n        style: {\n          float: 'left',\n          clear: 'both'\n        },\n        ref: function ref(el) {\n          _this2.messagesEnd = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), this.state.isShowSticker ? this.renderStickers() : null, React.createElement(\"div\", {\n        className: \"viewBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"icOpenGallery\",\n        src: images.ic_photo,\n        alt: \"icon open gallery\",\n        onClick: function onClick() {\n          return _this2.refInput.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        ref: function ref(el) {\n          _this2.refInput = el;\n        },\n        accept: \"image/*\",\n        className: \"viewInputGallery\",\n        type: \"file\",\n        onChange: this.onChoosePhoto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"icOpenSticker\",\n        src: images.ic_sticker,\n        alt: \"icon open sticker\",\n        onClick: this.openListSticker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"viewInput\",\n        placeholder: \"Type your message...\",\n        value: this.state.inputValue,\n        onChange: function onChange(event) {\n          _this2.setState({\n            inputValue: event.target.value\n          });\n        },\n        onKeyPress: this.onKeyboardPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"icSend\",\n        src: images.ic_send,\n        alt: \"icon send\",\n        onClick: function onClick() {\n          return _this2.onSendMessage(_this2.state.inputValue, 0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })), this.state.isLoading ? React.createElement(\"div\", {\n        className: \"viewLoading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(ReactLoading, {\n        type: 'spin',\n        color: '#203152',\n        height: '3%',\n        width: '3%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      })) : null);\n    }\n  }, {\n    key: \"isLastMessageLeft\",\n    value: function isLastMessageLeft(index) {\n      if (index + 1 < this.listMessage.length && this.listMessage[index + 1].idFrom === this.currentUserId || index === this.listMessage.length - 1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"isLastMessageRight\",\n    value: function isLastMessageRight(index) {\n      if (index + 1 < this.listMessage.length && this.listMessage[index + 1].idFrom !== this.currentUserId || index === this.listMessage.length - 1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return ChatBoard;\n}(Component);\n\nexport { ChatBoard as default };","map":{"version":3,"sources":["/home/harish/Downloads/reactjs-chat-demo/src/Component/ChatBoard/ChatBoard.js"],"names":["moment","React","Component","ReactLoading","myFirestore","myStorage","images","AppString","ChatBoard","props","getListHistory","removeListener","listMessage","length","setState","isLoading","hashString","currentUserId","currentPeerUser","id","groupChatId","collection","NODE_MESSAGES","doc","onSnapshot","snapshot","docChanges","forEach","change","type","DOC_ADDED","push","data","err","showToast","toString","openListSticker","isShowSticker","state","onSendMessage","content","trim","timestamp","valueOf","itemMessage","idFrom","idTo","set","then","inputValue","catch","onChoosePhoto","event","target","files","currentPhotoFile","prefixFiletype","indexOf","PREFIX_IMAGE","uploadPhoto","uploadTask","ref","child","put","on","UPLOAD_CHANGED","message","getDownloadURL","downloadURL","onKeyboardPress","key","scrollToBottom","messagesEnd","scrollIntoView","renderListMessage","viewListMessage","item","index","getGifImage","isLastMessageLeft","photoUrl","Number","format","ic_wave_hand","renderStickers","mimi1","mimi2","mimi3","mimi4","mimi5","mimi6","mimi7","mimi8","mimi9","str","hash","i","Math","pow","charCodeAt","value","localStorage","getItem","ID","currentUserAvatar","PHOTO_URL","currentUserNickname","NICKNAME","newProps","nickname","float","clear","el","ic_photo","refInput","click","ic_sticker","ic_send"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport React, {Component} from 'react'\nimport ReactLoading from 'react-loading'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {myFirestore, myStorage} from '../../Config/MyFirebase'\nimport images from '../Themes/Images'\nimport './ChatBoard.css'\nimport {AppString} from './../Const'\n\nexport default class ChatBoard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: false,\n            isShowSticker: false,\n            inputValue: ''\n        }\n        this.currentUserId = localStorage.getItem(AppString.ID)\n        this.currentUserAvatar = localStorage.getItem(AppString.PHOTO_URL)\n        this.currentUserNickname = localStorage.getItem(AppString.NICKNAME)\n        this.listMessage = []\n        this.currentPeerUser = this.props.currentPeerUser\n        this.groupChatId = null\n        this.removeListener = null\n        this.currentPhotoFile = null\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom()\n    }\n\n    componentDidMount() {\n        // For first render, it's not go through componentWillReceiveProps\n        this.getListHistory()\n    }\n\n    componentWillUnmount() {\n        if (this.removeListener) {\n            this.removeListener()\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.currentPeerUser) {\n            this.currentPeerUser = newProps.currentPeerUser\n            this.getListHistory()\n        }\n    }\n\n    getListHistory = () => {\n        if (this.removeListener) {\n            this.removeListener()\n        }\n        this.listMessage.length = 0\n        this.setState({isLoading: true})\n        if (\n            this.hashString(this.currentUserId) <=\n            this.hashString(this.currentPeerUser.id)\n        ) {\n            this.groupChatId = `${this.currentUserId}-${this.currentPeerUser.id}`\n        } else {\n            this.groupChatId = `${this.currentPeerUser.id}-${this.currentUserId}`\n        }\n\n        // Get history and listen new data added\n        this.removeListener = myFirestore\n            .collection(AppString.NODE_MESSAGES)\n            .doc(this.groupChatId)\n            .collection(this.groupChatId)\n            .onSnapshot(\n                snapshot => {\n                    snapshot.docChanges().forEach(change => {\n                        if (change.type === AppString.DOC_ADDED) {\n                            this.listMessage.push(change.doc.data())\n                        }\n                    })\n                    this.setState({isLoading: false})\n                },\n                err => {\n                    this.props.showToast(0, err.toString())\n                }\n            )\n    }\n\n    openListSticker = () => {\n        this.setState({isShowSticker: !this.state.isShowSticker})\n    }\n\n    onSendMessage = (content, type) => {\n        if (this.state.isShowSticker && type === 2) {\n            this.setState({isShowSticker: false})\n        }\n\n        if (content.trim() === '') {\n            return\n        }\n\n        const timestamp = moment()\n            .valueOf()\n            .toString()\n\n        const itemMessage = {\n            idFrom: this.currentUserId,\n            idTo: this.currentPeerUser.id,\n            timestamp: timestamp,\n            content: content.trim(),\n            type: type\n        }\n\n        myFirestore\n            .collection(AppString.NODE_MESSAGES)\n            .doc(this.groupChatId)\n            .collection(this.groupChatId)\n            .doc(timestamp)\n            .set(itemMessage)\n            .then(() => {\n                this.setState({inputValue: ''})\n            })\n            .catch(err => {\n                this.props.showToast(0, err.toString())\n            })\n    }\n\n    onChoosePhoto = event => {\n        if (event.target.files && event.target.files[0]) {\n            this.setState({isLoading: true})\n            this.currentPhotoFile = event.target.files[0]\n            // Check this file is an image?\n            const prefixFiletype = event.target.files[0].type.toString()\n            if (prefixFiletype.indexOf(AppString.PREFIX_IMAGE) === 0) {\n                this.uploadPhoto()\n            } else {\n                this.setState({isLoading: false})\n                this.props.showToast(0, 'This file is not an image')\n            }\n        } else {\n            this.setState({isLoading: false})\n        }\n    }\n\n    uploadPhoto = () => {\n        if (this.currentPhotoFile) {\n            const timestamp = moment()\n                .valueOf()\n                .toString()\n\n            const uploadTask = myStorage\n                .ref()\n                .child(timestamp)\n                .put(this.currentPhotoFile)\n\n            uploadTask.on(\n                AppString.UPLOAD_CHANGED,\n                null,\n                err => {\n                    this.setState({isLoading: false})\n                    this.props.showToast(0, err.message)\n                },\n                () => {\n                    uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                        this.setState({isLoading: false})\n                        this.onSendMessage(downloadURL, 1)\n                    })\n                }\n            )\n        } else {\n            this.setState({isLoading: false})\n            this.props.showToast(0, 'File is null')\n        }\n    }\n\n    onKeyboardPress = event => {\n        if (event.key === 'Enter') {\n            this.onSendMessage(this.state.inputValue, 0)\n        }\n    }\n\n    scrollToBottom = () => {\n        if (this.messagesEnd) {\n            this.messagesEnd.scrollIntoView({})\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"viewChatBoard\">\n                {/* Header */}\n                <div className=\"headerChatBoard\">\n                    <img\n                        className=\"viewAvatarItem\"\n                        src={this.currentPeerUser.photoUrl}\n                        alt=\"icon avatar\"\n                    />\n                    <span className=\"textHeaderChatBoard\">\n            {this.currentPeerUser.nickname}\n          </span>\n                </div>\n\n                {/* List message */}\n                <div className=\"viewListContentChat\">\n                    {this.renderListMessage()}\n                    <div\n                        style={{float: 'left', clear: 'both'}}\n                        ref={el => {\n                            this.messagesEnd = el\n                        }}\n                    />\n                </div>\n\n                {/* Stickers */}\n                {this.state.isShowSticker ? this.renderStickers() : null}\n\n                {/* View bottom */}\n                <div className=\"viewBottom\">\n                    <img\n                        className=\"icOpenGallery\"\n                        src={images.ic_photo}\n                        alt=\"icon open gallery\"\n                        onClick={() => this.refInput.click()}\n                    />\n                    <input\n                        ref={el => {\n                            this.refInput = el\n                        }}\n                        accept=\"image/*\"\n                        className=\"viewInputGallery\"\n                        type=\"file\"\n                        onChange={this.onChoosePhoto}\n                    />\n\n                    <img\n                        className=\"icOpenSticker\"\n                        src={images.ic_sticker}\n                        alt=\"icon open sticker\"\n                        onClick={this.openListSticker}\n                    />\n\n                    <input\n                        className=\"viewInput\"\n                        placeholder=\"Type your message...\"\n                        value={this.state.inputValue}\n                        onChange={event => {\n                            this.setState({inputValue: event.target.value})\n                        }}\n                        onKeyPress={this.onKeyboardPress}\n                    />\n                    <img\n                        className=\"icSend\"\n                        src={images.ic_send}\n                        alt=\"icon send\"\n                        onClick={() => this.onSendMessage(this.state.inputValue, 0)}\n                    />\n                </div>\n\n                {/* Loading */}\n                {this.state.isLoading ? (\n                    <div className=\"viewLoading\">\n                        <ReactLoading\n                            type={'spin'}\n                            color={'#203152'}\n                            height={'3%'}\n                            width={'3%'}\n                        />\n                    </div>\n                ) : null}\n            </div>\n        )\n    }\n\n    renderListMessage = () => {\n        if (this.listMessage.length > 0) {\n            let viewListMessage = []\n            this.listMessage.forEach((item, index) => {\n                if (item.idFrom === this.currentUserId) {\n                    // Item right (my message)\n                    if (item.type === 0) {\n                        viewListMessage.push(\n                            <div className=\"viewItemRight\" key={item.timestamp}>\n                                <span className=\"textContentItem\">{item.content}</span>\n                            </div>\n                        )\n                    } else if (item.type === 1) {\n                        viewListMessage.push(\n                            <div className=\"viewItemRight2\" key={item.timestamp}>\n                                <img\n                                    className=\"imgItemRight\"\n                                    src={item.content}\n                                    alt=\"content message\"\n                                />\n                            </div>\n                        )\n                    } else {\n                        viewListMessage.push(\n                            <div className=\"viewItemRight3\" key={item.timestamp}>\n                                <img\n                                    className=\"imgItemRight\"\n                                    src={this.getGifImage(item.content)}\n                                    alt=\"content message\"\n                                />\n                            </div>\n                        )\n                    }\n                } else {\n                    // Item left (peer message)\n                    if (item.type === 0) {\n                        viewListMessage.push(\n                            <div className=\"viewWrapItemLeft\" key={item.timestamp}>\n                                <div className=\"viewWrapItemLeft3\">\n                                    {this.isLastMessageLeft(index) ? (\n                                        <img\n                                            src={this.currentPeerUser.photoUrl}\n                                            alt=\"avatar\"\n                                            className=\"peerAvatarLeft\"\n                                        />\n                                    ) : (\n                                        <div className=\"viewPaddingLeft\"/>\n                                    )}\n                                    <div className=\"viewItemLeft\">\n                                        <span className=\"textContentItem\">{item.content}</span>\n                                    </div>\n                                </div>\n                                {this.isLastMessageLeft(index) ? (\n                                    <span className=\"textTimeLeft\">\n                    {moment(Number(item.timestamp)).format('ll')}\n                  </span>\n                                ) : null}\n                            </div>\n                        )\n                    } else if (item.type === 1) {\n                        viewListMessage.push(\n                            <div className=\"viewWrapItemLeft2\" key={item.timestamp}>\n                                <div className=\"viewWrapItemLeft3\">\n                                    {this.isLastMessageLeft(index) ? (\n                                        <img\n                                            src={this.currentPeerUser.photoUrl}\n                                            alt=\"avatar\"\n                                            className=\"peerAvatarLeft\"\n                                        />\n                                    ) : (\n                                        <div className=\"viewPaddingLeft\"/>\n                                    )}\n                                    <div className=\"viewItemLeft2\">\n                                        <img\n                                            className=\"imgItemLeft\"\n                                            src={item.content}\n                                            alt=\"content message\"\n                                        />\n                                    </div>\n                                </div>\n                                {this.isLastMessageLeft(index) ? (\n                                    <span className=\"textTimeLeft\">\n                    {moment(Number(item.timestamp)).format('ll')}\n                  </span>\n                                ) : null}\n                            </div>\n                        )\n                    } else {\n                        viewListMessage.push(\n                            <div className=\"viewWrapItemLeft2\" key={item.timestamp}>\n                                <div className=\"viewWrapItemLeft3\">\n                                    {this.isLastMessageLeft(index) ? (\n                                        <img\n                                            src={this.currentPeerUser.photoUrl}\n                                            alt=\"avatar\"\n                                            className=\"peerAvatarLeft\"\n                                        />\n                                    ) : (\n                                        <div className=\"viewPaddingLeft\"/>\n                                    )}\n                                    <div className=\"viewItemLeft3\" key={item.timestamp}>\n                                        <img\n                                            className=\"imgItemLeft\"\n                                            src={this.getGifImage(item.content)}\n                                            alt=\"content message\"\n                                        />\n                                    </div>\n                                </div>\n                                {this.isLastMessageLeft(index) ? (\n                                    <span className=\"textTimeLeft\">\n                    {moment(Number(item.timestamp)).format('ll')}\n                  </span>\n                                ) : null}\n                            </div>\n                        )\n                    }\n                }\n            })\n            return viewListMessage\n        } else {\n            return (\n                <div className=\"viewWrapSayHi\">\n                    <span className=\"textSayHi\">Say hi to new friend</span>\n                    <img\n                        className=\"imgWaveHand\"\n                        src={images.ic_wave_hand}\n                        alt=\"wave hand\"\n                    />\n                </div>\n            )\n        }\n    }\n\n    renderStickers = () => {\n        return (\n            <div className=\"viewStickers\">\n                <img\n                    className=\"imgSticker\"\n                    src={images.mimi1}\n                    alt=\"sticker\"\n                    onClick={() => this.onSendMessage('mimi1', 2)}\n                />\n                <img\n                    className=\"imgSticker\"\n                    src={images.mimi2}\n                    alt=\"sticker\"\n                    onClick={() => this.onSendMessage('mimi2', 2)}\n                />\n                <img\n                    className=\"imgSticker\"\n                    src={images.mimi3}\n                    alt=\"sticker\"\n                    onClick={() => this.onSendMessage('mimi3', 2)}\n                />\n                <img\n                    className=\"imgSticker\"\n                    src={images.mimi4}\n                    alt=\"sticker\"\n                    onClick={() => this.onSendMessage('mimi4', 2)}\n                />\n                <img\n                    className=\"imgSticker\"\n                    src={images.mimi5}\n                    alt=\"sticker\"\n                    onClick={() => this.onSendMessage('mimi5', 2)}\n                />\n                <img\n                    className=\"imgSticker\"\n                    src={images.mimi6}\n                    alt=\"sticker\"\n                    onClick={() => this.onSendMessage('mimi6', 2)}\n                />\n                <img\n                    className=\"imgSticker\"\n                    src={images.mimi7}\n                    alt=\"sticker\"\n                    onClick={() => this.onSendMessage('mimi7', 2)}\n                />\n                <img\n                    className=\"imgSticker\"\n                    src={images.mimi8}\n                    alt=\"sticker\"\n                    onClick={() => this.onSendMessage('mimi8', 2)}\n                />\n                <img\n                    className=\"imgSticker\"\n                    src={images.mimi9}\n                    alt=\"sticker\"\n                    onClick={() => this.onSendMessage('mimi9', 2)}\n                />\n            </div>\n        )\n    }\n\n    hashString = str => {\n        let hash = 0\n        for (let i = 0; i < str.length; i++) {\n            hash += Math.pow(str.charCodeAt(i) * 31, str.length - i)\n            hash = hash & hash // Convert to 32bit integer\n        }\n        return hash\n    }\n\n    getGifImage = value => {\n        switch (value) {\n            case 'mimi1':\n                return images.mimi1\n            case 'mimi2':\n                return images.mimi2\n            case 'mimi3':\n                return images.mimi3\n            case 'mimi4':\n                return images.mimi4\n            case 'mimi5':\n                return images.mimi5\n            case 'mimi6':\n                return images.mimi6\n            case 'mimi7':\n                return images.mimi7\n            case 'mimi8':\n                return images.mimi8\n            case 'mimi9':\n                return images.mimi9\n            default:\n                return null\n        }\n    }\n\n    isLastMessageLeft(index) {\n        if (\n            (index + 1 < this.listMessage.length &&\n                this.listMessage[index + 1].idFrom === this.currentUserId) ||\n            index === this.listMessage.length - 1\n        ) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    isLastMessageRight(index) {\n        if (\n            (index + 1 < this.listMessage.length &&\n                this.listMessage[index + 1].idFrom !== this.currentUserId) ||\n            index === this.listMessage.length - 1\n        ) {\n            return true\n        } else {\n            return false\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}